mean(mean_values)
}
pollutantmean('specdata/', 'sulfate',2)
?c
pollutantmean <- function(directory, pollutant, id=1:332) {
mean_values <- c(0, rep=length(id))
for (i in 1:length(id)) {
if (id[i]<10) {
file_sel <- paste(directory,"00",id,".csv",sep="")
}
else if (id[i]<100) {
file_sel <- paste(directory,"0",id,".csv",sep="")
}
else {
file_sel <- paste(directory,id,".csv",sep="")
}
measurements <- read.csv(file_sel, header=TRUE, sep=",")
timeseries <- measurements[pollutant]
mean_values[i] <- mean(timeseries[!is.na(timeseries)])
}
mean(mean_values)
}
pollutantmean('specdata/', 'sulfate',2)
pollutantmean('specdata/', 'sulfate',2:10)
pollutantmean <- function(directory, pollutant, id=1:332) {
mean_values <- c(0, rep=length(id))
for (i in 1:length(id)) {
if (id[i]<10) {
file_sel <- paste(directory,"00",id[i],".csv",sep="")
}
else if (id[i]<100) {
file_sel <- paste(directory,"0",id[i],".csv",sep="")
}
else {
file_sel <- paste(directory,id[i],".csv",sep="")
}
measurements <- read.csv(file_sel, header=TRUE, sep=",")
timeseries <- measurements[pollutant]
mean_values[i] <- mean(timeseries[!is.na(timeseries)])
}
mean(mean_values)
}
pollutantmean('specdata/', 'sulfate',2:10)
source("pollutantmean.R")
pollutantmean('specdata/', 'sulfate',1:10)
pollutantmean('specdata/', 'sulfate',70:72)
pollutantmean('specdata/', 'nitrate',70:72)
pollutantmean('specdata/', 'nitrate',23)
mean_values
pollutantmean('specdata/', 'nitrate',23)
pollutantmean('specdata/', 'nitrate',24)
pollutantmean('specdata/', 'nitrate',23)
pollutantmean('specdata/', 'nitrate',24:46)
pollutantmean('specdata/', 'nitrate',23)
source("pollutantmean.R")
pollutantmean('specdata/', 'nitrate',24:46)
source("pollutantmean.R")
pollutantmean('specdata/', 'nitrate',24:46)
pollutantmean('specdata/', 'nitrate',23)
pollutantmean('specdata/', 'nitrate',23)
source("pollutantmean.R")
pollutantmean('specdata/', 'nitrate',23)
pollutantmean('specdata/', 'nitrate',23)
source("pollutantmean.R")
pollutantmean('specdata/', 'nitrate',24:46)
pollutantmean('specdata/', 'nitrate',70:72)
pollutantmean('specdata/', 'sulfate',1:10)
mean(3.8807009, 4.4608112, 4.3276132, 4.2149563, 4.2100721, 4.1021316, 3.8200588, 4.7813542, 3.6456436, 0.6243649)
source("pollutantmean.R")
pollutantmean('specdata/', 'sulfate',1:10)
pollutantmean('specdata/', 'nitrate',23)
source("pollutantmean.R")
pollutantmean('specdata/', 'nitrate',23)
pollutantmean('specdata/', 'sulfate',1:10)
pollutantmean('specdata/', 'nitrate',70:72)
?vector
source("pollutantmean.R")
pollutantmean('specdata/', 'nitrate',70:72)
pollutantmean('specdata/', 'nitrate',23)
pollutantmean('specdata/', 'sulfate',23)
source("pollutantmean.R")
pollutantmean('specdata/', 'sulfate',23)
pollutantmean('specdata/', 'nitrate',23)
pollutantmean('specdata/', 'nitrate',23:24)
mean(1.280833,5.344983)
?mean
pollutantmean('specdata/', 'nitrate',22:23)
x <- c(0:10,50)
x
xm <- mean(x)
xm
mean(x)
mean(x,trim=0.10)
x <- c(1,2,3,4)
x
mean(x)
mean(x,trim=1)
mean(x,trim=0,1)
mean(x,trim=0.1)
mean(x,trim=0.10)
mean(x,trim=0.010)
source("pollutantmean.R")
pollutantmean('specdata/', 'nitrate',22:23)
round(1.0000, digits=1)
round(1.0000, digits=3)
round(1.0001, digits=3)
round(1.124501, digits=3)
round(1.124501, digits=4)
source("pollutantmean.R")
pollutantmean('specdata/', 'nitrate',23)
pollutantmean('specdata/', 'nitrate',1:10)
source("pollutantmean.R")
pollutantmean('specdata/', 'nitrate',1:10)
source("pollutantmean.R")
pollutantmean('specdata/', 'nitrate',1:10)
pollutantmean('specdata/', 'sulfate',1:10)
source("pollutantmean.R")
pollutantmean('specdata/', 'sulfate',1:10)
source("pollutantmean.R")
pollutantmean('specdata/', 'sulfate',1:10)
pollutantmean('specdata/', 'sulfate',70:72)
pollutantmean('specdata/', 'nitrate',70:72)
pollutantmean('specdata/', 'nitrate',23)
source("complete.R")
complete('specdata/',1)
?isTRUE
?complete.cases
source("complete.R")
complete('specdata/',1)
complete('specdata/',2)
source("complete.R")
complete('specdata/',2)
complete('specdata/',2)
source("complete.R")
complete('specdata/',2)
complete('specdata/',1:2)
complete('specdata/',1)
complete('specdata/',c(2,4,8,10))
complete('specdata/',30:25
sf
complete('specdata/',30:25)
complete('specdata/',3)
source("corr.R")
corr('specdata/',3)
source("corr.R")
corr('specdata/',3)
source("corr.R")
source("corr.R")
corr('specdata/',3)
source("corr.R")
corr('specdata/',3)
source("corr.R")
corr('specdata/',3)
corr('specdata/',3)
source("corr.R")
corr('specdata/',3)
source("corr.R")
source("corr.R")
corr('specdata/',3)
source("corr.R")
corr('specdata/',3)
source("corr.R")
corr('specdata/',3)
source("corr.R")
corr('specdata/',3)
source("corr.R")
corr('specdata/',3)
source("corr.R")
corr('specdata/',3)
source("corr.R")
corr('specdata/',3)
source("corr.R")
corr('specdata/',3)
source("corr.R")
corr('specdata/',3)
source("corr.R")
corr('specdata/',3)
cr <- corr('specdata/',150)
head(cr)
cr
source("corr.R")
cr <- corr('specdata/',150)
head(cr)
summary(cr)
cr <- corr('specdata/',400)
head(cr)
cr <- corr('specdata/',5000)
summary(cr)
length(cr)
cr <- corr('specdata/')
summary(cr)
length(cr)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata/", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata/", "nitrate", 70:72)
pollutantmean("specdata/", "sulfate",34)
pollutantmean("specdata/", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
cc <- complete("specdata/", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
cc <- complete("specdata/", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
cc <- complete("specdata/", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata/")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata/", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
cr <- corr("specdata/", 2000)
n <- length(cr)
cr <- corr("specdata/", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
a <- array(rnorm(2*2*10),c(2,2,10))
a
a <- array(rnorm(2*2*10),c(2,2,1))
a
a <- array(rnorm(2*2*10),c(2,2,1))
a
?rnorm
log(-2)
x <- 4
invisible(x)
x
?invisible
printmessage <- function(x) {if(x>0) print("x is greater than zero") else print("x is less than 0") invisible(x)}
printmessage <- function(x) {if(x>0) print("x is greater than zero") else print("x is less than 0") invisible(x)}
printmessage <- function(x) {
if(x>0)
print("x is greater than zero")
else
print("x is less than 0")
invisible(x)
}
printmessage(1)
printmessage <- function(x) {
if(x>0)
print("x is greater than zero")
else
print("x is less than 0")
}
printmessage(1)
f1 <- function(x) x*2
f1
f1(2)
f1 <- function(x) invisible(x*2)
f1(2)
printmessage(NA)
printmessage <- function(x) {
if(is.na(x)) print("x is a missing value")
else if(x>0)
print("x is greater than zero")
else
print("x is less than 0")
}
printmessage(NA)
printmessage(x)
mean(z)
traceback()
debug()
debug(mean)
ls
mean(x)
exit
quit
library(swirl)
swirl()
head(flags)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
m
q
sapply(flag_colors, mean)
sapply(flag_colors, mean)
d
x <- 1
sapply(flag_colors, mean)
undebug()
undebug(saplly)
undebug(sapply)
undebug(mean)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals, length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
library(swirl)
swirl()
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
iris
head(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris,1,mean)
apply(iris,2,mean)
apply(iris[,1:4],2,mean)
data(mtcars)
?mtcars
head(mtcars)
with(mtcars,tapply(mpg,cyl,mean))
?with
mean(mtcars$mpg,mtcars$cyl)
split(mtcars,mtcars$cyl)
head(mtcars)
apply(mtcars,2,mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
sapply(split(mtcars$hp,mtcars$cyl),mean)
meanhp <- sapply(split(mtcars$hp,mtcars$cyl),mean)
meanhp
meanhp$4
meanhp[4]
meanhp[1]
meanhp["4"]
abs(meanhp["4"]-meanhp["8"])
debug(ls)
ls
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
undebug(ls)
undebug(ls)
ls
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector
makeVector(2:10)
set(4:10)
makeVector$set(2:10)
makeVector$set()
makeVector()
makeVector$getmean
makeVector
liste <- makeVector()
liste
liste["$getmean"]
liste["getmean"]
x <- c(1,2,4)
x$getmean()
x$getmean
makeVector()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(1:10)
cachemean(c(1,3,5))
vector(c(1,3,5))
?vector
cachemean(is.vector(c(1,3,5))
lplihw
cachemean(is.vector(c(1,3,5))
sdf
cachemean(is.vector(c(1,3,5)))
cachemean
cachemean()
cachemean(5)
cachemean(is.data.frame(c(1,3,5)))
makeVector
cachemean(is.data.frame(c(1,3,5)))
cachemean()
cachemean(x)
cachemean(as.data.frame(c(1,3,5)))
y <- c(1,3,5)
class(y)
y
as.vector(y)
as.data.frame(y)
y <- as.data.frame(y)
y
cachemean(y)
makeVector(y)
cachemean
cachemean()
cachemean(y)
makeVector()
myvector <- makeVector(x)
cachemean(myvector)
cachemean(myvector)
cachemean(myvector)
x
x <- c(1,2,4,6)
myvector <- makeVector(x)
cachemean(myvector)
cachemean(myvector)
x <- c(1,2,4,7)
cachemean(myvector)
myvector <- makeVector(x)
cachemean(myvector)
x <- c(1,2,4,6)
myvector <- makeVector(x)
cachemean(myvector)
?solve
setwd("~/Documents/Training/Coursera/R_Programming/Programming_Assignment_2/ProgrammingAssignment2")
source(cachematrix.R)
source('cachematrix.R')
c = rbind(c(1,-1/4),c(-1/4,1))
makeCacheMatrix(c)
mymatrix <- makeCacheMatrix(c)
cachesolve(mymatrix)
cacheSolve(mymatrix)
newmatrix -> cacheSolve(mymatrix)
newmatrix <- cacheSolve(mymatrix)
newmatriy
newmatrix
newmatrix %*% mymatrix
mymatrix
data
newmatrix %*% x
x
newmatrix %*% c
c = rbind(c(1,-1/4,5),c(-1/4,1,5))
mymatrix <- makeCacheMatrix(c)
cacheSolve(mymatrix)
c = rbind(c(1,-1/4,5),c(-1/4,1,5),c(2,4,2))
mymatrix <- makeCacheMatrix(c)
cacheSolve(mymatrix)
cacheSolve(mymatrix) %*% c
c = rbind(c(2,5),c(1,3))
c
mymatrix <- makeCacheMatrix(c)
cacheSolve(mymatrix)
cacheSolve(mymatrix) %*% c
